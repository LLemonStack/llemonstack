# Zep
#
# Zep is a memory layer for AI agents. It can be used as a memory store for
# n8n workflows.
#
# https://www.getzep.com/
#
# Zep service health check:
# http://localhost:8010/healthz

# Zep requires a postgres database.
include:
  - docker-compose.supabase.yml

volumes:
  neo4j_data:

# Connect zep to the main network defined in docker-compose.yml.
# Change the name of the network if the project name is different.
# Network needs to be the same as the one used in docker-compose.yml.
networks:
  localnet:
    name: llemonstack_default
    external: true

services:
  zep:
    image: zepai/zep:latest
    container_name: zep
    networks:
      - localnet
    ports:
      - "8010:8000"
    volumes:
      - ./zep.yaml:/app/zep.yaml
    environment:
      - ZEP_CONFIG_FILE=zep.yaml
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ZEP_API_SECRET=${ZEP_API_SECRET}
      - ZEP_LOG_LEVEL=${ZEP_LOG_LEVEL:-info}
      - ZEP_LOG_FORMAT=${ZEP_LOG_FORMAT:-console}
      - OPENAI_API_KEY=${ZEP_OPENAI_API_KEY}
      - MODEL_NAME=${ZEP_MODEL_NAME}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    depends_on:
      graphiti:
        condition: service_healthy
      db: # From supabase/docker/docker-compose.yml
        condition: service_healthy

  graphiti:
    image: zepai/graphiti:0.3
    container_name: graphiti
    networks:
      - localnet
    ports:
      - "8003:8003"
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8003/healthcheck')",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - OPENAI_API_KEY=${ZEP_OPENAI_API_KEY}
      - MODEL_NAME=${ZEP_MODEL_NAME}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - PORT=8003

  neo4j:
    image: neo4j:5.22.0
    container_name: neo4j
    networks:
      - localnet
    healthcheck:
      test: wget http://localhost:7687 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}

