# Supabase
#
# This custom supabase docker-compose.yml file extends the original supabase
# docker-compose.yml file with some minor modifications. Notably supabase
# analytics is disabled since it consumes a lot of CPU and memory but is
# not needed by most users.
#

volumes:
  db-config:

# Only services listed below will be started
# Docker extends does not copy over the following service keys:
# - depends_on
# - volumes
# - deploy
# - networks
# - secrets
# They need to be added manually.

services:
  studio:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: studio
    container_name: supabase-studio
    labels:
      dev.dozzle.group: Supabase
    depends_on:
      analytics:
        condition: service_healthy

  kong:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: kong
    container_name: supabase-kong
    labels:
      dev.dozzle.group: Supabase
    ports:
      - ${KONG_HTTP_PORT2:-8000}:8000/tcp
    depends_on:
      analytics:
        condition: service_healthy
    volumes:
      - ../../.repos/supabase/docker/volumes/api/kong.yml:/home/kong/temp.yml:ro,z

  auth:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: auth
    container_name: supabase-auth
    labels:
      dev.dozzle.group: Supabase
    depends_on:
      db:
        condition: service_healthy
      analytics:
        condition: service_healthy

  rest:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: rest
    container_name: supabase-rest
    labels:
      dev.dozzle.group: Supabase
    depends_on:
      db:
        condition: service_healthy
      analytics:
        condition: service_healthy

  realtime:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: realtime
    container_name: supabase-realtime
    labels:
      dev.dozzle.group: Supabase
    depends_on:
      db:
        # Disable this if you are using an external Postgres database
        condition: service_healthy
      analytics:
        condition: service_healthy

  storage:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: storage
    labels:
      dev.dozzle.group: Supabase
    depends_on:
      db:
        condition: service_healthy
      rest:
        condition: service_started
      imgproxy:
        condition: service_started
    volumes:
      - ${LLEMONSTACK_VOLUMES_PATH:-../../volumes}/supabase/storage:/var/lib/storage:z

  imgproxy:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: imgproxy
    labels:
      dev.dozzle.group: Supabase
    volumes:
      - ${LLEMONSTACK_VOLUMES_PATH:-../../volumes}/supabase/storage:/var/lib/storage:z

  meta:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: meta
    labels:
      dev.dozzle.group: Supabase
    depends_on:
      db:
        condition: service_healthy
      analytics:
        condition: service_healthy

  functions:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: functions
    container_name: supabase-functions
    labels:
      dev.dozzle.group: Supabase
    depends_on:
      analytics:
        condition: service_healthy
    volumes:
      - ${LLEMONSTACK_VOLUMES_PATH:-../../volumes}/supabase/functions:/home/deno/functions:Z

  # Logflare Dummy Server
  # This is a dummy replacement for the Logflare service.
  # It discards all events sent to it to reduce resource consumption.
  # Logflare normally uses 500MB+ of memory. Dummy uses <3MB.
  analytics:
    container_name: supabase-analytics
    labels:
      dev.dozzle.group: Logging
    build: ../build/dummy/go
    restart: unless-stopped
    ports:
      - ${SUPABASE_LOGFLARE_PORT:-4000}:4000
    environment:
      - PORT=4000
    mem_limit: 10M
    cpus: 0.05
    healthcheck:
      test: ["CMD", "/app/dummy", "-health-check"]
      interval: 60s
      timeout: 3s
      retries: 3
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 3

  # Supabase Logflare
  # analytics:
  #   extends:
  #     file: ../../.repos/supabase/docker/docker-compose.yml
  #     service: analytics
  #   ports:
  #     - ${SUPABASE_LOGFLARE_PORT:-4000}:4000
  #   depends_on:
  #     db:
  #       condition: service_healthy

  # Supabase Postgres - primary database container
  db:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: db
    labels:
      dev.dozzle.group: Supabase
    depends_on:
      vector:
        condition: service_healthy
    volumes:
      # PRIMARY PGDATA directory
      # This is where database data is persisted between restarts
      - ${LLEMONSTACK_VOLUMES_PATH:-../../volumes}/supabase/db/data:/var/lib/postgresql/data:Z
      # Custom configuration for the database
      - db-config:/etc/postgresql-custom
      # Init and migration scripts; these are copied from the extended db service
      - ../../.repos/supabase/docker/volumes/db/realtime.sql:/docker-entrypoint-initdb.d/migrations/99-realtime.sql:Z
      - ../../.repos/supabase/docker/volumes/db/webhooks.sql:/docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql:Z
      - ../../.repos/supabase/docker/volumes/db/roles.sql:/docker-entrypoint-initdb.d/init-scripts/99-roles.sql:Z
      - ../../.repos/supabase/docker/volumes/db/jwt.sql:/docker-entrypoint-initdb.d/init-scripts/99-jwt.sql:Z
      - ../../.repos/supabase/docker/volumes/db/_supabase.sql:/docker-entrypoint-initdb.d/migrations/97-_supabase.sql:Z
      - ../../.repos/supabase/docker/volumes/db/logs.sql:/docker-entrypoint-initdb.d/migrations/99-logs.sql:Z
      - ../../.repos/supabase/docker/volumes/db/pooler.sql:/docker-entrypoint-initdb.d/migrations/99-pooler.sql:Z

  vector:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: vector
    labels:
      dev.dozzle.group: Supabase
    volumes:
      - ../../.repos/supabase/docker/volumes/logs/vector.yml:/etc/vector/vector.yml:ro,z
      - ${DOCKER_SOCKET_LOCATION}:/var/run/docker.sock:ro,z

  # Supabase Supervisor & Pooler Proxy
  # Exposes postgres port to the host
  supavisor:
    extends:
      file: ../../.repos/supabase/docker/docker-compose.yml
      service: supavisor
    labels:
      dev.dozzle.group: Supabase
    ports:
      - ${POSTGRES_PORT:-5432}:5432
      - ${POOLER_PROXY_PORT_TRANSACTION:-6543}:6543
    depends_on:
      db:
        condition: service_healthy
      analytics:
        condition: service_healthy
    volumes:
      - ../../.repos/supabase/docker/volumes/pooler/pooler.exs:/etc/pooler/pooler.exs:ro,z
