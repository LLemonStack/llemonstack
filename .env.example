################################################################################
# LLEMONSTACK .ENV CONFIG
################################################################################

# =============================================
# REQUIRED VARIABLES
# =============================================

# OpenAI API Key is required for Zep to work properly.
# You can get one at https://platform.openai.com/api-keys
# Set ENABLE_ZEP=false below to disable Zep if you don't need it.
OPENAI_API_KEY=your-openai-api-key

# All other variables below are optional and will work with default values.
# IMPORTANT: the default values are insecure and should ONLY be used for
# local development behind a firewall.

# =============================================
# LLEMONSTACK SERVICES
# =============================================

# Enable or disable services: true | false
# When a service is disabled, it won't be started or updated.
ENABLE_SUPABASE=true
ENABLE_N8N=true
ENABLE_FLOWISE=true
ENABLE_OPENWEBUI=true
ENABLE_QDRANT=true
ENABLE_BROWSER_USE=true
ENABLE_LITELLM=false
ENABLE_LANGFUSE=false
ENABLE_REDIS=${ENABLE_LANGFUSE}
ENABLE_CLICKHOUSE=${ENABLE_LANGFUSE}
ENABLE_ZEP=false
ENABLE_PROMETHEUS=false

ENABLE_NEO4J=${ENABLE_ZEP} # Neo4j is required by Zep

# Ollama Service Profile: cpu | gpu-amd | gpu-nvidia | host | false
ENABLE_OLLAMA=cpu
# Set ollama to one of the gpu profiles if you have a GPU and are not on a Mac.
# Set to "host" if you are on a Mac and want to use your local machine as the GPU.
# Host requires running Ollama on the host machine (not in Docker).


# =============================================
# LLEMONSTACK CONFIG
# =============================================

# Project Name: string
# No spaces or special characters. Used to group services in docker.
# This allows you to run multiple instances of services or the
# entire stack on the same machine with different project names.
DOCKER_PROJECT_NAME=llemonstack

# Enables extra debug logging: true | false
DEBUG_LLEMONSTACK=false




################################################################################
# SERVICES CONFIG
# This section contains individual service configuration.
# See the cooresponding docker-compose.yml file for more options per service.
################################################################################



# =============================================
# N8N CONFIG
# See
# - docker/docker-compose.n8n.yml
# - https://docs.n8n.io/hosting/configuration/environment-variables/
# =============================================

# Set these to long and secure random string
N8N_ENCRYPTION_KEY=super-secret-key
N8N_USER_MANAGEMENT_JWT_SECRET=even-more-secret

# Timezone for n8n
# GENERIC_TIMEZONE=America/Los_Angeles

# n8n log level: info | warn | error | debug
# N8N_LOG_LEVEL=info



# =============================================
# ZEP CONFIG
# See
# - docker/docker-compose.zep.yml
# - docker/zep.yaml
# =============================================

# Postgres settings for Zep
# If not set, the default values will be used.
# ZEP_POSTGRES_USER=
# ZEP_POSTGRES_PASSWORD=
# ZEP_POSTGRES_SCHEMA=

# API Key and model for Zep chat history summaries
# OpenAI API key is REQUIRED for Zep to work properly
ZEP_OPENAI_API_KEY=${OPENAI_API_KEY}
ZEP_MODEL_NAME=gpt-4o-mini

# API token for Zep - can be any string or blank
ZEP_API_SECRET=zepapi123

# Neo4j settings used by Zep and Graphiti
NEO4J_USER=neo4j
NEO4J_PASSWORD=neo4jpass123

# Log level for Zep, visible in container logs
# debug, info, warn, error, panic, dpanic, or fatal. Default = info
# ZEP_LOG_LEVEL=debug
# # Log format: json or console. Default = json
# ZEP_LOG_FORMAT=console



# =============================================
# FLOWISE CONFIG
# See
# - docker/docker-compose.flowise.yml
# =============================================

# Postgres settings for Flowise
# If not set, the primary postgres user and password will be used.
# FLOWISE_POSTGRES_USER=
# FLOWISE_POSTGRES_PASSWORD=

# Flowise UI credentials
FLOWISE_USERNAME=admin
FLOWISE_PASSWORD= # Set by init script



# =============================================
# BROWSER-USE CONFIG
# See
# - docker/docker-compose.browser-use.yml
# - .repos/browser-use-web-ui/.env
# =============================================

# Browser-use LLM API Keys
# If left blank, these can be set in the web UI at runtime
BROWSER_USE_OPENAI_API_KEY==${OPENAI_API_KEY}
BROWSER_USE_ANTHROPIC_API_KEY=
BROWSER_USE_GOOGLE_API_KEY=
BROWSER_USE_DEEPSEEK_API_KEY=

# VNC password is used to watch the browser as it's automated.
# Not required to access the browser-use web UI.
# Defaults to "vncpassword" if left blank
BROWSER_USE_VNC_PASSWORD=vncpass123



# =============================================
# SUPABASE CONFIG
# See
# - docker/supabase.env
# - .repos/supabase/docker/docker-compose.yml
# =============================================

# To login to the supabase dashboard:
SUPABASE_DASHBOARD_USERNAME=supabase
SUPABASE_DASHBOARD_PASSWORD=supabase

# Password for the main postgres user
POSTGRES_PASSWORD=your-super-secret-and-long-postgres-password
# Default postgres user is "postgres" and is not configurable.

# Supabase Secrets - YOU MUST CHANGE THESE BEFORE DEPLOYING TO PRODUCTION
# The default values are insecure but will work for local development.
# See https://supabase.com/docs/guides/self-hosting/docker#securing-your-services
SUPABASE_JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q

# Encryption key for supabase vault
SUPABASE_VAULT_ENC_KEY=your-encryption-key-32-chars-min



# =============================================
# LITELLM CONFIG
# See
# - docker/docker-compose.litellm.yml
# - docker/config.litellm.yaml
# =============================================

LITELLM_POSTGRES_USER=postgres
LITELLM_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
LITELLM_POSTGRES_DB=postgres
LITELLM_POSTGRES_SCHEMA=public

# LiteLLM Master Key
# This key is used by services to access the LiteLLM proxy.
LITELLM_MASTER_KEY=sk-123 # Set by init script

# LiteLLM UI Username and Password
LITELLM_UI_USERNAME=admin
LITELLM_UI_PASSWORD=123456 # Set by init script

# LLM Provider API Keys
# If left blank, these can be set in the web UI at runtime
LITELLM_OPENAI_API_KEY=${OPENAI_API_KEY}
LITELLM_ANTHROPIC_API_KEY=
LITELLM_GROQ_API_KEY=



# =============================================
# LANGFUSE CONFIG
# See
# - docker/docker-compose.langfuse.yml
# =============================================

LANGFUSE_POSTGRES_USER=langfuse
LANGFUSE_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
LANGFUSE_POSTGRES_DB=postgres
LANGFUSE_POSTGRES_SCHEMA=public
LANGFUSE_POSTGRES_URL=postgresql://${LANGFUSE_POSTGRES_USER}:${LANGFUSE_POSTGRES_PASSWORD}@db:5432/${LANGFUSE_POSTGRES_DB}?schema=${LANGFUSE_POSTGRES_SCHEMA}
LANGFUSE_SALT=
LANGFUSE_ENCRYPTION_KEY=
LANGFUSE_INIT_PROJECT_PUBLIC_KEY=
LANGFUSE_INIT_PROJECT_SECRET_KEY=
LANGFUSE_INIT_USER_EMAIL=admin@example.com
LANGFUSE_INIT_USER_PASSWORD=
LANGFUSE_NEXTAUTH_SECRET=

CLICKHOUSE_PASSWORD=

REDIS_PASSWORD=

MINIO_ROOT_PASSWORD=



################################################################################
# END LLEMONSTACK .ENV CONFIG
################################################################################

