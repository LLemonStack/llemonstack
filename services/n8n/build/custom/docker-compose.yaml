# n8n with OpenTelemetry & ffmpeg
#
# n8n is an AI agent and workflow automation tool.
#
# https://n8n.io/
# https://docs.n8n.io/hosting/configuration/task-runners/

networks:
  default:
    name: ${LLEMONSTACK_NETWORK_NAME}
    external: true

volumes:
  n8n_custom_storage:
    driver: local

services:
  n8n:
    container_name: n8n
    labels:
      dev.dozzle.group: Workflows
    build:
      context: .
      dockerfile: Dockerfile

    restart: unless-stopped
    ports:
      - 5678:5678 # Changed from 5678 to 5679 to avoid conflict with n8n
    volumes:
      - n8n_custom_storage:/home/node/.n8n
      - ${LLEMONSTACK_IMPORT_VOLUME_PATH:-./import/}/n8n:/import
      - ${LLEMONSTACK_SHARED_VOLUME_PATH:-./shared/}:/data/shared
      # Add tracing.js to the container when debugging
      - ./tracing.js:/usr/local/lib/node_modules/n8n/tracing.js # Uncomment when debugging
      # - ./docker-entrypoint.sh:/docker-entrypoint.sh # Uncomment when debugging

    environment:
      # See https://docs.n8n.io/hosting/configuration/task-runners/

      # Database used by n8n
      - DB_TYPE=postgresdb
      - DB_TABLE_PREFIX=n8n_
      - DB_POSTGRESDB_HOST=${N8N_POSTGRES_HOST:-supavisor}
      - DB_POSTGRESDB_USER=${N8N_POSTGRES_USER:-postgres}${POSTGRES_USER_TENANT_SUFFIX:-}
      - DB_POSTGRESDB_PASSWORD=${N8N_POSTGRES_PASSWORD:-${POSTGRES_PASSWORD}}
      - DB_POSTGRESDB_SCHEMA=${N8N_POSTGRES_SCHEMA:-public}
      - DB_POSTGRESDB_DATABASE=postgres

      - N8N_DIAGNOSTICS_CONFIG_BACKEND=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_SENTRY_DSN= # Disable sentry
      - N8N_ENCRYPTION_KEY
      - N8N_USER_MANAGEMENT_JWT_SECRET

      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true

      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}

      - OLLAMA_HOST # set by start.ts as env var

      # Deployment settings
      # See https://docs.n8n.io/hosting/configuration/environment-variables/deployment/
      - N8N_TEMPLATES_ENABLED=false

      # Task runner settings
      # See https://docs.n8n.io/hosting/configuration/task-runners/
      - N8N_RUNNERS_ENABLED=true

      # Disable sending diagnostics, notifications, and templates to n8n servers
      # See https://docs.n8n.io/hosting/configuration/configuration-examples/isolation/
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_VERSION_NOTIFICATIONS_ENABLED=true
      - N8N_TEMPLATES_ENABLED=true
      # - EXTERNAL_FRONTEND_HOOKS_URLS=
      # - N8N_DIAGNOSTICS_CONFIG_FRONTEND=
      # - N8N_DIAGNOSTICS_CONFIG_BACKEND=

      # OpenTelemetry
      # See:
      # - https://opentelemetry.io/docs/languages/sdk-configuration/otlp-exporter/
      # - https://docs.honeycomb.io/get-started/start-building/application/traces/
      - OTEL_SDK_DISABLED=${N8N_OTEL_SDK_DISABLED:-false} # Set to true to disable OpenTelemetry and start n8n normally
      - OTEL_SERVICE_NAME=n8n
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf

      # Honeycomb configuration
      - OTEL_EXPORTER_OTLP_ENDPOINT=${N8N_OTEL_EXPORTER_OTLP_ENDPOINT:-https://api.honeycomb.io} # Base api endpoint
      - OTEL_EXPORTER_OTLP_HEADERS=${N8N_OTEL_EXPORTER_OTLP_HEADERS:-x-honeycomb-team=${HONEYCOMB_API_KEY}} # Applies to all otel requests

      # NodeSDK log level
      # See https://www.npmjs.com/package/@opentelemetry/sdk-node
      # NONE | ERROR | WARN | INFO | DEBUG | VERBOSE | ALL
      - OTEL_LOG_LEVEL=INFO

      # Log level used by tracing.js
      # Set to `debug` to enable verbose logging
      # Winston log levels: error, warn, info, debug, verbose, silly
      - TRACING_LOG_LEVEL=info

      # NPM module import configuration
      # See https://docs.n8n.io/hosting/configuration/environment-variables/nodes/
      - NODE_FUNCTION_ALLOW_EXTERNAL=* # Allows any external node to be imported in n8n code nodes
      - NODE_FUNCTION_ALLOW_BUILTIN=* # Allow built-in nodes to be imported in n8n code nodes
      # - N8N_CUSTOM_EXTENSIONS # Path to a custom n8n extension

      # Langfuse configuration
      # - LANGFUSE_PUBLIC_KEY=pk-lf-... # langfuse public key
      # - LANGFUSE_SECRET_KEY=sk-lf-... # langfuse secret key
      # - LANGFUSE_BASE_URL=http://langfuse:3000
